@model EcommerceBookStore.Models.Book

@{
    ViewData["Title"] = "Sell Book";
}

<h2>Sell Book</h2>

<div>
    <h4>Book Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Title</dt>
        <dd class="col-sm-10">@Model.Title</dd>

        <dt class="col-sm-2">Author</dt>
        <dd class="col-sm-10">@Model.Author</dd>

        <dt class="col-sm-2">Price</dt>
        <dd class="col-sm-10">@Model.Price.ToString("C")</dd>

        <dt class="col-sm-2">Quantity Available</dt>
        <dd class="col-sm-10">@Model.Quantity</dd>
    </dl>

    <!-- Validation summary for errors like negative inventory -->
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
</div>

<!-- Sell Form -->
<div>
    <h4>Sell Book</h4>
    <form asp-action="Sell" method="post">
        <div class="form-group">
            <label for="quantityToSell">Quantity to Sell:</label>
            <input type="number" class="form-control" id="quantityToSell" name="quantity" min="1" max="@Model.Quantity" required />
            <span class="text-danger">
                @ViewData.ModelState["Quantity"]?.Errors.FirstOrDefault()?.ErrorMessage
            </span>
        </div>
        <br />
        <input type="hidden" asp-for="BookID" />
        <button type="submit" class="btn btn-primary">Sell</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
